没有前端实际开发经验的
  @1 必须自己做一个毕设项目「github开源项目 / 小米有品 ...」
  @2 把所学的知识“落地”，把知识真正的沉淀下来

===================
1.写简历
  简历模板:样式简洁大方
  简历是敲门砖{邀约面试} && 认真的编写简历就是在事先自我面试{面试中,面试官问的问题,大部分出自于你的简历}
  简历名称
  ------
  基本信息
    @1 学历最好都写本科及以上「如果是985/211重点说明」
    @2 放照片
    @3 工作年限 Math.ceil

  求职信息
    @1 期望薪资{我不太建议写面议,否则有一些“不适合”的面试；范围「最低期望薪资+1/2K ~ +4/5K」；}
    脑残问题：你为啥感觉自己值这些钱？
       + BASE很重要  我上一家就已经多少钱了，但是还包含一些期许和展望~~
       + ...

  专业技能/自我评价  *****
    调研30家左右符合你等级的公司，看看招聘需求
    @1 突出技术广度
    @2 突出自己的实战经验 ”例如：拥有多个大型项目的实战管理经验“
    @3 突出深度和高逼格的内容
    @4 还可以写一些非技术能力：博客{粉丝}、管理、外语能力...
    @5 非前端类技术，自己还掌握一些，可以写一写，但是不要多写「例如：算法、后台语言...」
    不要啰嗦，精简语言，突出重点即可

  工作履历
    个人喜欢不详细描述公司「没人在乎，不是重点」
    xxxx.xx~xxxx.xx   xxxx公司   xxx职务
      描述：突出一些自己是项目负责人或者管理经验等,也可以突出自己带着团队完成了某些技术的攻坚!! 也可以写一些做过的项目!!
    
    @1 每份工作的时间不要小于一年「除最后一家外，其他之前的公司，时间短的该合并合并」
    @2 最后一家公司最好是两年「去大厂就不要瞎改了，做好解释的话术」
    @3 一定记好了，不要让面试官感觉你是一个频繁跳槽的「例如：一年一家这样的...」

  项目经验  *****
    xxxx.xx ~ xxxx.xx  项目「名字一定好好写」 岗位职责
       技术栈：可以写的细一些，把一些插件写上也没有问题  
       描述：
         @1 突出项目很大，自己是主负责人，负责大部分「加一些：自己带着实习生...」
         @2 突出技术攻坚「底层 & 重难点...」
         @3 突出逼格高的
    ... 不得少于三个「都需要是框架类的项目、小程序也可以、全栈类」
    ----
    可以加一两个非框架或者博客项目/个人作品{不要写仿}

  教育经历
     @1 好学校写在前面，不是很好的写在后面即可
     @2 专业无所谓
  
  证书/语言
  兴趣爱好，而且拿的出手，一定要写「尤其是能歌善舞的」

===========================

2. 面试技巧
  @1 引导面试官问自己擅长的或者精心准备的
     ”例如：闭包...“
  ====>多阐述自己会的

  @2 面试的时候准备笔和纸
  ====>遇到不会问题，当着面试官面记一下
  
  @3 面试的时候带一本书，等待面试之前自己看看，例如：Node
  ===>用心，从细节行动上突出自己是”好孩子“

  @4 做好面试总结
    问的问题，自己咋回答的，以及如何更好回答「剧本精神」
    录音

职业规划
   突出自己有一些能力 「贡献」
   只是还不足「上进心」
   愿意和团队一起成长
   突出自己稳定
   ...
   
离职原因：不要说上一家坏话

===========================

/*
 * 开放性问题：谈谈项目中的亮点/难点？ 
 *   规避功能型问题 & 业务型问题，除非是功能和业务确实很复杂，例如：
 *     + 单点登录
 *     + 权限的多维度管控
 *     + 多组件信息的复杂共享类问题
 *     + 产品安全解决策略
 *     + 数据埋点&性能监控
 *     + 直播类、音视频类、实时通信类、可视化处理类...的功能处理「突出自己的知识体系面」
 *     + ...
 * 
 *   重点讲解的是：
 *     + 性能优化方案
 *       + webpack层面
 *       + HTTP层面
 *       + 页面渲染层面「包含代码渲染」
 *       + 骨架屏
 *       + 延迟/异步加载
 *       + 大数据渲染优化
 *       + 大文件传输处理
 *       + ...
 *       强调结果，例如：之前打包/加载时间是N秒，经过我的优化后是M秒「N>M」
 * 
 *     + 插件组件封装「敏捷化平台构建之一」
 *       + 公共方法库
 *       + 插件/组件封装：二次封装 & 开源级插件组件的打造
 *       + Vue自定义指令
 *       + ...
 *       除了强调结果「例如：之前半个月开发周期，现在只需要7天」，还可以突出自己的原理/源码阅读能力
 * 
 *   也可以讲解一些新技术方向的攻坚
 *     + Hybrid
 *     + 可视化
 *     + uni-app/flutter
 *     + typescript
 *     + node
 *     + ...
 *  
 *   强调阅读源码的经验和能力
 */